struct ClassFile {
    u4             magic;
    u2             minor_version;
    u2             major_version;
    u2             constant_pool_count;
    cp_info        constant_pool[constant_pool_count-1];
    u2             access_flags;
    u2             this_class;
    u2             super_class;
    u2             interfaces_count;
    u2             interfaces[interfaces_count];
    u2             fields_count;
    field_info     fields[fields_count];
    u2             methods_count;
    method_info    methods[methods_count];
    u2             attributes_count;
    attribute_info attributes[attributes_count];
}

union cp_info {
    CONSTANT_Class_info CONSTANT_Class_info;
}

struct CONSTANT_Class_info {
    u1 tag;
    u2 name_index;
}

struct CONSTANT_Fieldref_info {
    u1 tag;
    u2 class_index;
    u2 name_and_type_index;
}

struct CONSTANT_Methodref_info {
    u1 tag;
    u2 class_index;
    u2 name_and_type_index;
}

struct CONSTANT_InterfaceMethodref_info {
    u1 tag;
    u2 class_index;
    u2 name_and_type_index;
}

struct CONSTANT_String_info {
    u1 tag;
    u2 string_index;
}

struct CONSTANT_Integer_info {
    u1 tag;
    u4 bytes;
}

struct CONSTANT_Float_info {
    u1 tag;
    u4 bytes;
}

struct CONSTANT_Long_info {
    u1 tag;
    u4 high_bytes;
    u4 low_bytes;
}

struct CONSTANT_Double_info {
    u1 tag;
    u4 high_bytes;
    u4 low_bytes;
}

struct CONSTANT_NameAndType_info {
    u1 tag;
    u2 name_index;
    u2 descriptor_index;
}

struct CONSTANT_Utf8_info {
    u1 tag;
    u2 length;
    u1 bytes[length];
}

struct CONSTANT_MethodHandle_info {
    u1 tag;
    u1 reference_kind;
    u2 reference_index;
}

struct CONSTANT_MethodType_info {
    u1 tag;
    u2 descriptor_index;
}

struct CONSTANT_InvokeDynamic_info {
    u1 tag;
    u2 bootstrap_method_attr_index;
    u2 name_and_type_index;
}

struct CONSTANT_Module_info {
    u1 tag;
    u2 name_index;
}

struct CONSTANT_Package_info {
    u1 tag;
    u2 name_index;
}

struct field_info {
    u2             access_flags;
    u2             name_index;
    u2             descriptor_index;
    u2             attributes_count;
    attribute_info attributes[attributes_count];
}

struct method_info {
    u2             access_flags;
    u2             name_index;
    u2             descriptor_index;
    u2             attributes_count;
    attribute_info attributes[attributes_count];
}

struct attribute_info {
    u2 attribute_name_index;
    u4 attribute_length;
    u1 info[attribute_length];
}

struct ConstantValue_attribute {
    u2 attribute_name_index;
    u4 attribute_length;
    u2 constantvalue_index;
}

struct Exception_info {
    u2 start_pc;
    u2 end_pc;
    u2 handler_pc;
    u2 catch_type;
}

struct Code_attribute {
    u2 attribute_name_index;
    u4 attribute_length;
    u2 max_stack;
    u2 max_locals;
    u4 code_length;
    u1 code[code_length];
    u2 exception_table_length;
    Exception_info exception_table[exception_table_length];
    u2 attributes_count;
    attribute_info attributes[attributes_count];
}

struct StackMapTable_attribute {
    u2              attribute_name_index;
    u4              attribute_length;
    u2              number_of_entries;
    stack_map_frame entries[number_of_entries];
}

union verification_type {
    Top_variable_info top_variable_info;
    Integer_variable_info integer_variable_info;
    Float_variable_info float_variable_info;
    Long_variable_info long_variable_info;
    Double_variable_info double_variable_info;
    Null_variable_info null_variable_info;
    UninitializedThis_variable_info uninitializedThis_variable_info;
    Object_variable_info object_variable_info;
    Uninitialized_variable_info uninitialized_variable_info;
}

struct Top_variable_info {
    u1 tag;
}

struct Integer_variable_info {
    u1 tag;
}

struct Float_variable_info {
    u1 tag;
}

struct Null_variable_info {
    u1 tag;
}

struct UninitializedThis_variable_info {
    u1 tag;
}

struct Object_variable_info {
    u1 tag;
    u2 cpool_index;
}

struct Uninitialized_variable_info {
    u1 tag;
    u2 offset;
}

struct Long_variable_info {
    u1 tag;
}

struct Double_variable_info {
    u1 tag;
}

union stack_map_frame {
    same_frame same_frame;
    same_locals_1_stack_item_frame same_locals_1_stack_item_frame;
    same_locals_1_stack_item_frame_extended same_locals_1_stack_item_frame_extended;
    chop_frame chop_frame;
    same_frame_extended same_frame_extended;
    append_frame append_frame;
    full_frame full_frame;
}

struct same_frame {
    u1 frame_type;
}

struct same_locals_1_stack_item_frame {
    u1 frame_type;
    verification_type stack;
}

struct same_locals_1_stack_item_frame_extended {
    u1 frame_type;
    u2 offset_delta;
    verification_type stack;
}

struct chop_frame {
    u1 frame_type;
    u2 offset_delta;
}

struct same_frame_extended {
    u1 frame_type;
    u2 offset_delta;
}

struct append_frame {
    u1 frame_type;
    u2 offset_delta;
    verification_type locals[frame_type - 251];
}

struct full_frame {
    u1 frame_type;
    u2 offset_delta;
    u2 number_of_locals;
    verification_type locals[number_of_locals];
    u2 number_of_stack_items;
    verification_type stack[number_of_stack_items];
}

struct Exceptions_attribute {
    u2 attribute_name_index;
    u4 attribute_length;
    u2 number_of_exceptions;
    u2 exception_index_table[number_of_exceptions];
}


struct Classes_info {
   u2 inner_class_info_index;
   u2 outer_class_info_index;
   u2 inner_name_index;
   u2 inner_class_access_flags;
}

struct InnerClasses_attribute {
    u2 attribute_name_index;
    u4 attribute_length;
    u2 number_of_classes;
    Classes_info classes[number_of_classes];
}

struct EnclosingMethod_attribute {
    u2 attribute_name_index;
    u4 attribute_length;
    u2 class_index;
    u2 method_index;
}

struct Synthetic_attribute {
    u2 attribute_name_index;
    u4 attribute_length;
}

struct Signature_attribute {
    u2 attribute_name_index;
    u4 attribute_length;
    u2 signature_index;
}

struct SourceFile_attribute {
    u2 attribute_name_index;
    u4 attribute_length;
    u2 sourcefile_index;
}

struct SourceDebugExtension_attribute {
    u2 attribute_name_index;
    u4 attribute_length;
    u1 debug_extension[attribute_length];
}

struct LineNumberTable_info {
    u2 start_pc;
    u2 line_number;	
}

struct LineNumberTable_attribute {
    u2 attribute_name_index;
    u4 attribute_length;
    u2 line_number_table_length;
    LineNumberTable_info line_number_table[line_number_table_length];
}

struct LocalVariableTable_info {
   u2 start_pc;
   u2 length;
   u2 name_index;
   u2 descriptor_index;
   u2 index;
}

struct LocalVariableTable_attribute {
    u2 attribute_name_index;
    u4 attribute_length;
    u2 local_variable_table_length;
    LocalVariableTable_info local_variable_table[local_variable_table_length];
}

struct LocalVariableTypeTable_info {
   u2 start_pc;
   u2 length;
   u2 name_index;
   u2 signature_index;
   u2 index;
}

struct LocalVariableTypeTable_attribute {
    u2 attribute_name_index;
    u4 attribute_length;
    u2 local_variable_type_table_length;
    LocalVariableTypeTable_info local_variable_type_table[local_variable_type_table_length];
}

struct Deprecated_attribute {
    u2 attribute_name_index;
    u4 attribute_length;
}

struct RuntimeVisibleAnnotations_attribute {
    u2         attribute_name_index;
    u4         attribute_length;
    u2         num_annotations;
    annotation annotations[num_annotations];
}

struct annotation {
    u2 type_index;
    u2 num_element_value_pairs;
    element_value_pair element_value_pairs[num_element_value_pairs];
}

struct enum_const_value {
    u2 type_name_index;
    u2 const_name_index;
}

struct array_value {
  u2            num_values;
  element_value values[num_values];
}

union value {
        u2 const_value_index;
        enum_const_value enum_const_value;
        u2 class_info_index;
        annotation annotation_value;
        array_value array_value;
}

struct element_value {
    u1 tag;
    value value;
}

struct element_value_pair {
   u2            element_name_index;
   element_value value;
}

